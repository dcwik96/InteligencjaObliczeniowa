duzyProblemPlecakowy <- data.frame(wartosc = sample(10:100,30), waga = sample(10:100,30))
duzyProblemPlecakowy
duzyLimit <- 600
fitnessFunc2 <- function(chr) {
calkowita_wartosc_chr <- chr %*% duzyProblemPlecakowy$wartosc
calkowita_waga_chr <- chr %*% duzyProblemPlecakowy$waga
if(calkowita_waga_chr > duzyLimit)
return(0)
else
return(-calkowita_wartosc_chr)
}
library(genalg)
duzyPlecakGenAlg <- rbga.bin(size = 30, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2)
chartData <- data.frame(srednia = -duzyPlecakGenAlg$mean, maksymalne = duzyPlecakGenAlg$best)
View(chartData)
chartData <- data.frame(srednia = -duzyPlecakGenAlg$mean, maksymalne = -duzyPlecakGenAlg$best)
duzyPlecakGenAlg
plot(chartData$srednia, type = "l", main = "Dzialanie Alg. Genetycznego", xlab = "pokolenie", yla)
plot(chartData$srednia, type = "l", main = "Dzialanie Alg. Genetycznego", xlab = "pokolenie", ylab = "fitness (ocena)", col = "red")
lines(chartData$srednia, col = "blue")
plot(chartData$maksymalne, type = "l", main = "Dzialanie Alg. Genetycznego", xlab = "pokolenie", ylab = "fitness (ocena)", col = "red")
lines(chartData$srednia, col = "blue")
legend("bottomright", legend = c("srednia", "maksymalne"), col = c("blue", "red"), lty = 1)
values = c()
values
values = c(values, 2)
values
values = c(values, 23)
values
values
values.values
remove(values)
values
duzyPlecakGenAlg <- system.time(rbga.bin(size = 30, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2))
duzyPlecakGenAlg
duzyPlecakGenAlg$system
duzyPlecakGenAlg
duzyPlecakGenAlg.użytkownik
duzyPlecakGenAlg$użytkownik
valueee <- c(duzyPlecakGenAlg)
valueee
valueee$user.self
duzyPlecakGenAlg[0]
duzyPlecakGenAlg[1]
duzyPlecakGenAlg[1].valueClassTest()
duzyPlecakGenAlg <- rbga.bin(size = 30, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2)
Sys.Date(duzyPlecakGenAlg)
system.time(duzyPlecakGenAlg)
Sys.time(rbga.bin(size = 30, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2))
Sys.time(duzyPlecakGenAlg)
Sys.time()
czas <- system.time(rbga.bin(size = 30, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2))
czas
czas[,]
czas[1,]
czas[,1]
czas[1]
val <- c(czas[1])
val
czas[,"user.self"]
czas[1,"user.self"]
czas
czas[,użytkownik]
czas[,"użytkownik"]
czas[1,]
getElement(czas, "użytkownik")
czas
getElement(czas)
getElement(czas, użytkownik)
getElement(czas, user.self)
getElement(czas, "user.self")
summary(duzyPlecakGenAlg, echo = TRUE)
duzyPlecakGenAlg
dane <- data.frame(
wielkosc = c(),
czas = c()
)
dane
dane <- data.frame(
wielkosc = c(duzyPlecakGenAlg$size),
czas = c(getElement(czas, "user.self"))
)
dane
InserRow
dane <- rbind(dane, c(duzyPlecakGenAlg$size, getElement(czas, "user.self")))
dane
remove(dane)
dane <- data.frame(
+     wielkosc = c(duzyPlecakGenAlg$size),
+     czas = c(getElement(czas, "user.self"))
+ )
dane <- data.frame(
wielkosc = c(duzyPlecakGenAlg$size),
czas = c(getElement(czas, "user.self"))
)
dane
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:100,60), waga = sample(10:100,60))
duzyPlecakGenAlg <- rbga.bin(size = 60, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2)
czas <- system.time(rbga.bin(size = 60, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2))
czas
dane <- rbind(dane, c(duzyPlecakGenAlg$size, getElement(czas, "user.self")))
dane
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:100,120), waga = sample(10:100,120))
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:200,120), waga = sample(10:200,120))
czas <- system.time(rbga.bin(size = 120, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2))
dane <- rbind(dane, c(duzyPlecakGenAlg$size, getElement(czas, "user.self")))
dane
duzyPlecakGenAlg <- rbga.bin(size = 120, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2)
czas <- system.time(rbga.bin(size = 120, popSize = 200, iters = 50, mutationChance = 0.03, elitism = T, evalFunc = fitnessFunc2))
czas
dane <- rbind(dane, c(duzyPlecakGenAlg$size, getElement(czas, "user.self")))
dane
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:200,200), waga = sample(10:200,200))
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:201,200), waga = sample(10:201,200))
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:201,180), waga = sample(10:200,180))
duzyProblemPlecakowy
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:200,200), waga = sample(10:200,180))
duzyProblemPlecakowy <- data.frame(wartosc = sample(10:200,200), waga = sample(10:200,200))
dane
chartData <- data.frame(wielkosc = dane$wielkosc, czas = dane$czas)
plot(chartData$czas, chartData$wielkosc, type = "l", main = "Dzialanie Alg. Genetycznego", xlab = "pokolenie", ylab = "fitness (ocena)", col = "red")
plot(chartData$wielkosc,chartData$czas, type = "l", main = "Dzialanie Alg. Genetycznego", xlab = "pokolenie", ylab = "fitness (ocena)", col = "red")
plot(chartData$wielkosc,chartData$czas, type = "l", main = "Czas dziaan", xlab = "wielkosc", ylab = "czas", col = "red")
savehistory("~/Pulpit/Rstudio/Lab03/Historia.Rhistory")
