values
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/duzo.txt", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = "iloscKolumn", nrow="iloscWierszy")
values <- matrix(data = zmiana, ncol = 3, nrow=403)
fitnessFunc <- function(chromosome) {
counter = 0
result = FALSE
for(i in 1:nrow(values)){
row <- values[i,]
row_1 <- abs(row[1])
row_2 <- abs(row[2])
row_3 <- abs(row[3])
x1 = chromosome[row_1]
if(row[1] < 0){ x1 = !x1 }
if(x1 == 1) {
counter = counter +1
}
else {
x2 = chromosome[row_2]
if(row[2] < 0){ x2 = !x2 }
if(x2 == 1) {
counter = counter +1
}
else {
x3 = chromosome[row_3]
if(row[3] < 0){ x3 = !x3 }
if(x3 == 1) {
counter = counter +1
}
}
}
}
return(-counter)
}
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
library(genalg)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 1, elitism = T, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel
time <- system.time(rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
time
time <- system.time(rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc))
time
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 500, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
GAmodel <- rbga.bin(size = 100, popSize = 200, iters = 100,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 1000,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 1000,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 500,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 500,
mutationChance = 0.03, elitism = F, evalFunc = fitnessFunc)
plot(GAmodel)
time <- system.time(rbga.bin(size = 100, popSize = 50, iters = 1000,
mutationChance = 0.01, elitism = F, evalFunc = fitnessFunc))
time
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 1000,
mutationChance = 0.03, elitism = F, evalFunc = fitnessFunc)
GAmodel
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 1000,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
dane <- data.frame(wielkosc = c(), czas = c())
dane
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.03, elitism = F, evalFunc = fitnessFunc)
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/50.cnf", header = FALSE)
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/wartosci.cnf", header = FALSE)
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/50.cnf", header = FALSE)
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/50.cnf", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = "iloscKolumn", nrow="iloscWierszy")
values <- matrix(data = zmiana, ncol = 3, nrow=218)
fitnessFunc <- function(chromosome) {
counter = 0
result = FALSE
for(i in 1:nrow(values)){
row <- values[i,]
row_1 <- abs(row[1])
row_2 <- abs(row[2])
row_3 <- abs(row[3])
x1 = chromosome[row_1]
if(row[1] < 0){ x1 = !x1 }
if(x1 == 1) {
counter = counter +1
}
else {
x2 = chromosome[row_2]
if(row[2] < 0){ x2 = !x2 }
if(x2 == 1) {
counter = counter +1
}
else {
x3 = chromosome[row_3]
if(row[3] < 0){ x3 = !x3 }
if(x3 == 1) {
counter = counter +1
}
}
}
}
return(-counter)
}
GAmodel <- rbga.bin(size = 50, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
time <- system.time(rbga.bin(size = "iloscZmiennyc", popSize = 200, iters = 200,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
time <- system.time(rbga.bin(size = 50, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
dane <- rbind(dane, (GAmodel$size, getElement(time, "user.self")))
dane <- rbind(dane, c(GAmodel$size, getElement(time, "user.self")))
dane
remove(dane)
dane <- data.frame(wielkosc = c(GAmodel$size), czas = c(getElement(time, "user.self")))
dane
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/75.cnf", header = FALSE)
values <- matrix(data = zmiana, ncol = 3, nrow=218)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = 3, nrow=325)
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/75.cnf", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = 3, nrow=325)
GAmodel <- rbga.bin(size = 75, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
GAmodel
plot
plot(GAmodel)
time <- system.time(rbga.bin(size = 75, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
dane <- rbind(dane, c(GAmodel$size, getElement(time, "user.self")))
dane
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/100.cnf", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = 3, nrow=430)
GAmodel <- rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
time <- system.time(rbga.bin(size = 100, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
dane <- rbind(dane, c(GAmodel$size, getElement(time, "user.self")))
dane
time
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/125.cnf", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = 3, nrow="iloscWierszy")
values <- matrix(data = zmiana, ncol = 3, nrow=538)
GAmodel <- rbga.bin(size = 125, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
time <- system.time(rbga.bin(size = 125, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
dane <- rbind(dane, c(GAmodel$size, getElement(time, "user.self")))
dane
GAmodel
plot(GAmodel)
dane
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/150.cnf", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = 3, nrow = 645)
values
GAmodel <- rbga.bin(size = 150, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
time <- system.time(rbga.bin(size = 150, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
dane <- rbind(dane, c(GAmodel$size, getElement(time, "user.self")))
ne
dane
values <- read.table("/home/dcwik/Pulpit/InteligencjaObliczeniowa/Projekt1/175.cnf", header = FALSE)
values <- values[,-4]
zmiana <- mapply(values, FUN=as.numeric)
values <- matrix(data = zmiana, ncol = 3, nrow=753)
GAmodel <- rbga.bin(size = 753, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
time <- system.time(rbga.bin(size = "iloscZmiennyc", popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
GAmodel <- rbga.bin(size = 175, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
GAmodel
time <- system.time(rbga.bin(size = 175, popSize = 50, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc))
dane <- rbind(dane, c(GAmodel$size, getElement(time, "user.self")))
dane
chartData <- data.frame(wielkosc = dane$wielkosc, czas = dane$czas)
chartData
plot(chartData$wielkosc,chartData$czas, type = "l", main = "Porównanie czasu działania róznych intancji", xlab = "Wielkość problemu", ylab = "Czas działania algorytmu", col = "red")
savehistory("~/Pulpit/InteligencjaObliczeniowa/Projekt1/HISTORIA.Rhistory")
